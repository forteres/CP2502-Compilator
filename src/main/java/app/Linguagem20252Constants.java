/* Generated By:JavaCC: Do not edit this line. Linguagem20252Constants.java */
package app;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Linguagem20252Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BLANK_SPACE = 1;
  /** RegularExpression Id. */
  int END_OF_LINE = 2;
  /** RegularExpression Id. */
  int NEW_LINE = 3;
  /** RegularExpression Id. */
  int TABULATION = 4;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int BLOCK_COMMENT = 6;
  /** RegularExpression Id. */
  int MALFORMED_REAL = 7;
  /** RegularExpression Id. */
  int REAL = 8;
  /** RegularExpression Id. */
  int MALFORMED_NUMBER = 9;
  /** RegularExpression Id. */
  int NUMBER = 10;
  /** RegularExpression Id. */
  int TEXT_DOUBLE = 11;
  /** RegularExpression Id. */
  int TEXT_SINGLE = 12;
  /** RegularExpression Id. */
  int UNCLOSED_STRING = 13;
  /** RegularExpression Id. */
  int UNCLOSED_QUOTE = 14;
  /** RegularExpression Id. */
  int ASSIGN = 15;
  /** RegularExpression Id. */
  int EQUAL = 16;
  /** RegularExpression Id. */
  int NOT_EQUAL = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int COLON = 19;
  /** RegularExpression Id. */
  int COMMA = 20;
  /** RegularExpression Id. */
  int DOT = 21;
  /** RegularExpression Id. */
  int LBRACE = 22;
  /** RegularExpression Id. */
  int RBRACE = 23;
  /** RegularExpression Id. */
  int LBRACKET = 24;
  /** RegularExpression Id. */
  int RBRACKET = 25;
  /** RegularExpression Id. */
  int LPAREN = 26;
  /** RegularExpression Id. */
  int RPAREN = 27;
  /** RegularExpression Id. */
  int PLUS = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int STAR = 30;
  /** RegularExpression Id. */
  int SLASH = 31;
  /** RegularExpression Id. */
  int PERCENT = 32;
  /** RegularExpression Id. */
  int POWER = 33;
  /** RegularExpression Id. */
  int DOUBLE_PERCENT = 34;
  /** RegularExpression Id. */
  int SHIFT_LEFT = 35;
  /** RegularExpression Id. */
  int SHIFT_RIGHT = 36;
  /** RegularExpression Id. */
  int SHIFT_LEFT_ASSIGN = 37;
  /** RegularExpression Id. */
  int SHIFT_RIGHT_ASSIGN = 38;
  /** RegularExpression Id. */
  int EXCLAMATION = 39;
  /** RegularExpression Id. */
  int PIPE = 40;
  /** RegularExpression Id. */
  int AMPERSAND = 41;
  /** RegularExpression Id. */
  int TYPE_NUM = 42;
  /** RegularExpression Id. */
  int TYPE_REAL = 43;
  /** RegularExpression Id. */
  int TYPE_TEXT = 44;
  /** RegularExpression Id. */
  int TYPE_FLAG = 45;
  /** RegularExpression Id. */
  int BEGIN = 46;
  /** RegularExpression Id. */
  int DEFINE = 47;
  /** RegularExpression Id. */
  int START = 48;
  /** RegularExpression Id. */
  int END = 49;
  /** RegularExpression Id. */
  int SET = 50;
  /** RegularExpression Id. */
  int READ = 51;
  /** RegularExpression Id. */
  int SHOW = 52;
  /** RegularExpression Id. */
  int IF = 53;
  /** RegularExpression Id. */
  int THEN = 54;
  /** RegularExpression Id. */
  int ELSE = 55;
  /** RegularExpression Id. */
  int LOOP = 56;
  /** RegularExpression Id. */
  int WHILE = 57;
  /** RegularExpression Id. */
  int TRUE = 58;
  /** RegularExpression Id. */
  int FALSE = 59;
  /** RegularExpression Id. */
  int MALFORMED_IDENTIFIER = 60;
  /** RegularExpression Id. */
  int IDENTIFIER = 61;
  /** RegularExpression Id. */
  int INVALID_SIMBOL = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<SINGLE_LINE_COMMENT>",
    "<BLOCK_COMMENT>",
    "<MALFORMED_REAL>",
    "<REAL>",
    "<MALFORMED_NUMBER>",
    "<NUMBER>",
    "<TEXT_DOUBLE>",
    "<TEXT_SINGLE>",
    "<UNCLOSED_STRING>",
    "<UNCLOSED_QUOTE>",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"**\"",
    "\"%%\"",
    "\"<<\"",
    "\">>\"",
    "\"<<=\"",
    "\">>=\"",
    "\"!\"",
    "\"|\"",
    "\"&\"",
    "<TYPE_NUM>",
    "<TYPE_REAL>",
    "<TYPE_TEXT>",
    "<TYPE_FLAG>",
    "<BEGIN>",
    "<DEFINE>",
    "<START>",
    "<END>",
    "<SET>",
    "<READ>",
    "<SHOW>",
    "<IF>",
    "<THEN>",
    "<ELSE>",
    "<LOOP>",
    "<WHILE>",
    "<TRUE>",
    "<FALSE>",
    "<MALFORMED_IDENTIFIER>",
    "<IDENTIFIER>",
    "<INVALID_SIMBOL>",
  };

}
